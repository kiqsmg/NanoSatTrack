!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("@nivo/core"),require("@nivo/tooltip"),require("prop-types"),require("@nivo/colors"),require("lodash/get"),require("lodash/isFunction"),require("d3-format"),require("d3-geo"),require("@nivo/legends"),require("react/jsx-runtime")):"function"==typeof define&&define.amd?define(["exports","react","@nivo/core","@nivo/tooltip","prop-types","@nivo/colors","lodash/get","lodash/isFunction","d3-format","d3-geo","@nivo/legends","react/jsx-runtime"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).nivo=e.nivo||{},e.React,e.nivo,e.nivo,e.PropTypes,e.nivo,e["lodash/get"],e["lodash/isFunction"],e.d3,e.d3,e.nivo,e["react/jsx-runtime"])}(this,(function(e,t,o,r,i,n,a,u,l,s,d,c){"use strict";function f(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var p=f(i),h=f(a),g=f(u);function v(){return v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},v.apply(this,arguments)}var m={azimuthalEqualArea:s.geoAzimuthalEqualArea,azimuthalEquidistant:s.geoAzimuthalEquidistant,gnomonic:s.geoGnomonic,orthographic:s.geoOrthographic,stereographic:s.geoStereographic,equalEarth:s.geoEqualEarth,equirectangular:s.geoEquirectangular,mercator:s.geoMercator,transverseMercator:s.geoTransverseMercator,naturalEarth1:s.geoNaturalEarth1},C=function(e){var r=e.width,i=e.height,a=e.projectionType,u=e.projectionScale,l=e.projectionTranslation,d=e.projectionRotation,c=e.fillColor,f=e.borderWidth,p=e.borderColor,h=t.useMemo((function(){return m[a]().scale(u).translate([r*l[0],i*l[1]]).rotate(d)}),[r,i,a,u,l[0],l[1],d[0],d[1],d[2]]),g=t.useMemo((function(){return s.geoPath(h)}),[h]),v=t.useMemo((function(){return s.geoGraticule()})),C=o.useTheme(),b=t.useMemo((function(){return"function"==typeof f?f:function(){return f}}),[f]),j=n.useInheritedColor(p,C),y=t.useMemo((function(){return"function"==typeof c?c:function(){return c}}),[c]);return{projection:h,path:g,graticule:v,getBorderWidth:b,getBorderColor:j,getFillColor:y}},b=function(e){var r=e.features,i=e.data,n=e.match,a=e.label,u=e.value,s=e.valueFormat,c=e.colors,f=e.unknownColor,p=e.domain,m=t.useMemo((function(){return g.default(n)?n:function(e,t){var o=h.default(e,n),r=h.default(t,n);return o&&o===r}}),[n]),C=t.useMemo((function(){return g.default(a)?a:function(e){return h.default(e,a)}}),[a]),b=t.useMemo((function(){return g.default(u)?u:function(e){return h.default(e,u)}}),[u]),j=t.useMemo((function(){return void 0===s?function(e){return e}:g.default(s)?s:l.format(s)}),[s]),y=t.useMemo((function(){return o.guessQuantizeColorScale(c).domain(p)}),[c,p]),R=t.useMemo((function(){return function(e){return void 0===e.value?f:y(e.value)}}),[y,f]),q=t.useMemo((function(){return r.map((function(e){var t=i.find((function(t){return m(e,t)})),o=b(t);if(t){var r=v({},e,{data:t,value:o,formattedValue:j(o)});return r.color=R(r),r.label=C(r),r}return e}))}),[r,i,m,b,j,R]),T=d.useQuantizeColorScaleLegendData({scale:y,valueFormat:j});return{colorScale:y,getFillColor:R,boundFeatures:q,valueFormatter:j,legendData:T}},j=t.memo((function(e){var t=e.feature;return void 0===t.data?null:c.jsx(r.BasicTooltip,{id:t.label,color:t.color,enableChip:!0,value:t.formattedValue})}));j.propTypes={feature:p.default.object.isRequired},j.displayName="ChoroplethTooltip";var y={features:p.default.arrayOf(p.default.shape({id:p.default.string.isRequired,type:p.default.oneOf(["Feature"]).isRequired,properties:p.default.object,geometry:p.default.object.isRequired})).isRequired,projectionType:p.default.oneOf(Object.keys(m)).isRequired,projectionScale:p.default.number.isRequired,projectionTranslation:p.default.arrayOf(p.default.number).isRequired,projectionRotation:p.default.arrayOf(p.default.number).isRequired,fillColor:p.default.oneOfType([p.default.string,p.default.func]).isRequired,borderWidth:p.default.oneOfType([p.default.number,p.default.func]).isRequired,borderColor:n.inheritedColorPropType.isRequired,enableGraticule:p.default.bool.isRequired,graticuleLineWidth:p.default.number.isRequired,graticuleLineColor:p.default.string.isRequired,isInteractive:p.default.bool.isRequired,onMouseEnter:p.default.func.isRequired,onMouseMove:p.default.func.isRequired,onMouseLeave:p.default.func.isRequired,onClick:p.default.func.isRequired,tooltip:p.default.any,layers:p.default.arrayOf(p.default.oneOfType([p.default.oneOf(["graticule","features"]),p.default.func])).isRequired},R=v({},y,{role:p.default.string.isRequired}),q=v({pixelRatio:p.default.number.isRequired},y),T={data:p.default.arrayOf(p.default.object).isRequired,match:p.default.oneOfType([p.default.string,p.default.func]).isRequired,label:p.default.oneOfType([p.default.string,p.default.func]).isRequired,value:p.default.oneOfType([p.default.string,p.default.func]).isRequired,valueFormat:p.default.oneOfType([p.default.string,p.default.func]),colors:o.quantizeColorScalePropType.isRequired,domain:p.default.arrayOf(p.default.number).isRequired,unknownColor:p.default.string.isRequired,layers:p.default.arrayOf(p.default.oneOfType([p.default.oneOf(["graticule","features","legends"]),p.default.func])).isRequired},M=v({},R,T,{role:p.default.string.isRequired}),k=v({},q,T),W={projectionType:"mercator",projectionScale:100,projectionTranslation:[.5,.5],projectionRotation:[0,0,0],enableGraticule:!1,graticuleLineWidth:.5,graticuleLineColor:"#999999",fillColor:"#dddddd",borderWidth:0,borderColor:"#000000",isInteractive:!0,onMouseEnter:function(){},onMouseLeave:function(){},onMouseMove:function(){},onClick:function(){},layers:["graticule","features"],legends:[],fill:[],defs:[]},x=v({},W,{role:"img"}),w=v({},W,{pixelRatio:"undefined"!=typeof window&&window.devicePixelRatio||1}),F={match:"id",label:"id",value:"value",colors:"PuBuGn",unknownColor:"#999",tooltip:j,layers:["graticule","features","legends"]},E=v({},x,F,{role:"img"}),S=v({},w,F),O=t.memo((function(e){var t=e.path,o=e.graticule,r=e.lineWidth,i=e.lineColor;return c.jsx("path",{fill:"none",strokeWidth:r,stroke:i,d:t(o())})}));O.propTypes={path:p.default.func.isRequired,graticule:p.default.func.isRequired,lineWidth:p.default.number.isRequired,lineColor:p.default.string.isRequired},O.displayName="GeoGraticule";var L=t.memo((function(e){var t,o=e.feature,r=e.path,i=e.fillColor,n=e.borderWidth,a=e.borderColor,u=e.onClick,l=e.onMouseEnter,s=e.onMouseMove,d=e.onMouseLeave;return c.jsx("path",{fill:null!=(t=null==o?void 0:o.fill)?t:i,strokeWidth:n,stroke:a,strokeLinejoin:"bevel",d:r(o),onMouseEnter:function(e){return l(o,e)},onMouseMove:function(e){return s(o,e)},onMouseLeave:function(e){return d(o,e)},onClick:function(e){return u(o,e)}},o.id)}));L.propTypes={feature:p.default.shape({id:p.default.string.isRequired,type:p.default.oneOf(["Feature"]).isRequired,properties:p.default.object,geometry:p.default.object.isRequired}).isRequired,path:p.default.func.isRequired,fillColor:p.default.string.isRequired,borderWidth:p.default.number.isRequired,borderColor:p.default.string.isRequired,onMouseEnter:p.default.func.isRequired,onMouseMove:p.default.func.isRequired,onMouseLeave:p.default.func.isRequired,onClick:p.default.func.isRequired},L.displayName="GeoMapFeature";var P=t.memo((function(e){var i=e.width,n=e.height,a=e.margin,u=e.features,l=e.layers,s=e.projectionType,d=e.projectionScale,f=e.projectionTranslation,p=e.projectionRotation,h=e.fillColor,g=e.borderWidth,v=e.borderColor,m=e.enableGraticule,b=e.graticuleLineWidth,j=e.graticuleLineColor,y=e.isInteractive,R=e.onClick,q=e.tooltip,T=e.role,M=o.useDimensions(i,n,a),k=M.margin,W=M.outerWidth,x=M.outerHeight,w=C({width:i,height:n,projectionType:s,projectionScale:d,projectionTranslation:f,projectionRotation:p,fillColor:h,borderWidth:g,borderColor:v}),F=w.graticule,E=w.path,S=w.getFillColor,P=w.getBorderWidth,G=w.getBorderColor,B=o.useTheme(),D=r.useTooltip(),I=D.showTooltipFromEvent,N=D.hideTooltip,z=t.useCallback((function(e,t){return y&&R&&R(e,t)}),[y,R]),H=t.useCallback((function(e,t){return y&&q&&I(c.jsx(q,{feature:e}),t)}),[y,I,q]),A=t.useCallback((function(e,t){return y&&q&&I(c.jsx(q,{feature:e}),t)}),[y,I,q]),K=t.useCallback((function(){return y&&N()}),[y,N]);return c.jsx(o.SvgWrapper,{width:W,height:x,margin:k,theme:B,role:T,children:l.map((function(o,r){return"graticule"===o?!0!==m?null:c.jsx(O,{path:E,graticule:F,lineWidth:b,lineColor:j},"graticule"):"features"===o?c.jsx(t.Fragment,{children:u.map((function(e){return c.jsx(L,{feature:e,path:E,fillColor:S(e),borderWidth:P(e),borderColor:G(e),onMouseEnter:H,onMouseMove:A,onMouseLeave:K,onClick:z},e.id)}))},"features"):c.jsx(t.Fragment,{children:o(e)},r)}))})}));P.displayName="GeoMap",P.propTypes=R,P.defaultProps=x;var G=o.withContainer(P),B=function(e,t,r,i){var n=o.getRelativeCursor(t,e),a=n[0],u=n[1];return r.find((function(e){return s.geoContains(e,i.invert([a,u]))}))},D=t.memo((function(e){var i=e.width,n=e.height,a=e.margin,u=e.pixelRatio,l=e.features,s=e.layers,d=e.projectionType,f=e.projectionScale,p=e.projectionTranslation,h=e.projectionRotation,g=e.fillColor,v=e.borderWidth,m=e.borderColor,b=e.enableGraticule,j=e.graticuleLineWidth,y=e.graticuleLineColor,R=e.isInteractive,q=e.onClick,T=e.onMouseMove,M=e.tooltip,k=t.useRef(null),W=o.useTheme(),x=o.useDimensions(i,n,a),w=x.margin,F=x.outerWidth,E=x.outerHeight,S=C({width:i,height:n,projectionType:d,projectionScale:f,projectionTranslation:p,projectionRotation:h,fillColor:g,borderWidth:v,borderColor:m}),O=S.projection,L=S.graticule,P=S.path,G=S.getFillColor,D=S.getBorderWidth,I=S.getBorderColor;t.useEffect((function(){if(k){k.current.width=F*u,k.current.height=E*u;var t=k.current.getContext("2d");t.scale(u,u),t.fillStyle=W.background,t.fillRect(0,0,F,E),t.translate(w.left,w.top),P.context(t),s.forEach((function(o){"graticule"===o?!0===b&&(t.lineWidth=j,t.strokeStyle=y,t.beginPath(),P(L()),t.stroke()):"features"===o?l.forEach((function(e){t.beginPath(),P(e),t.fillStyle=G(e),t.fill();var o=D(e);o>0&&(t.strokeStyle=I(e),t.lineWidth=o,t.stroke())})):o(t,e)}))}}),[k,F,E,w,u,W,P,L,G,D,I,l,s]);var N=r.useTooltip(),z=N.showTooltipFromEvent,H=N.hideTooltip,A=t.useCallback((function(e){if(R&&M){var t=B(e,k.current,l,O);t?z(c.jsx(M,{feature:t}),e):H(),T&&T(t||null,e)}}),[z,H,R,M,k,l,O]),K=t.useCallback((function(){return R&&H()}),[R,H]),Q=t.useCallback((function(e){if(R&&q){var t=B(e,k.current,l,O);t&&q(t,e)}}),[R,k,l,O,q]);return c.jsx("canvas",{ref:k,width:F*u,height:E*u,style:{width:F,height:E,cursor:R?"auto":"normal"},onMouseMove:A,onMouseLeave:K,onClick:Q})}));D.displatName="GeoMapCanvas",D.propTypes=q,D.defaultProps=w;var I=o.withContainer(D),N=t.memo((function(e){var i=e.width,n=e.height,a=e.margin,u=e.features,l=e.data,s=e.match,f=e.label,p=e.value,h=e.valueFormat,g=e.projectionType,m=e.projectionScale,j=e.projectionTranslation,y=e.projectionRotation,R=e.colors,q=e.domain,T=e.unknownColor,M=e.borderWidth,k=e.borderColor,W=e.enableGraticule,x=e.graticuleLineWidth,w=e.graticuleLineColor,F=e.layers,S=e.legends,P=e.isInteractive,G=e.onClick,B=e.tooltip,D=e.role,I=e.defs,N=void 0===I?E.defs:I,z=e.fill,H=void 0===z?E.fill:z,A=o.useDimensions(i,n,a),K=A.margin,Q=A.outerWidth,V=A.outerHeight,_=C({width:i,height:n,projectionType:g,projectionScale:m,projectionTranslation:j,projectionRotation:y,fillColor:function(){},borderWidth:M,borderColor:k}),J=_.graticule,U=_.path,X=_.getBorderWidth,Y=_.getBorderColor,Z=b({features:u,data:l,match:s,label:f,value:p,valueFormat:h,colors:R,unknownColor:T,domain:q}),$=Z.getFillColor,ee=Z.boundFeatures,te=Z.legendData,oe=o.useTheme(),re=o.bindDefs(N,ee,H,{dataKey:"data",targetKey:"fill"}),ie=r.useTooltip(),ne=ie.showTooltipFromEvent,ae=ie.hideTooltip,ue=t.useCallback((function(e,t){return P&&G&&G(e,t)}),[P,G]),le=t.useCallback((function(e,t){return P&&B&&ne(c.jsx(B,{feature:e}),t)}),[P,ne,B]),se=t.useCallback((function(e,t){return P&&B&&ne(c.jsx(B,{feature:e}),t)}),[P,ne,B]),de=t.useCallback((function(){return P&&ae()}),[P,ae]);return c.jsx(o.SvgWrapper,{width:Q,height:V,margin:K,theme:oe,defs:re,role:D,children:F.map((function(e,o){return"graticule"===e?!0!==W?null:c.jsx(O,{path:U,graticule:J,lineWidth:x,lineColor:w},"graticule"):"features"===e?c.jsx(t.Fragment,{children:ee.map((function(e){return c.jsx(L,{feature:e,path:U,fillColor:$(e),borderWidth:X(e),borderColor:Y(e),onMouseEnter:le,onMouseMove:se,onMouseLeave:de,onClick:ue},e.id)}))},"features"):"legends"===e?S.map((function(e,t){return c.jsx(d.BoxLegendSvg,v({containerWidth:i,containerHeight:n,data:te},e),t)})):c.jsx(t.Fragment,{children:e({})},o)}))})}));N.displayName="Choropleth",N.propTypes=M,N.defaultProps=E;var z=o.withContainer(N),H=function(e,t,r,i){var n=o.getRelativeCursor(t,e),a=n[0],u=n[1];return r.find((function(e){return s.geoContains(e,i.invert([a,u]))}))},A=t.memo((function(e){var i=e.width,n=e.height,a=e.margin,u=e.pixelRatio,l=e.features,s=e.data,f=e.match,p=e.label,h=e.value,g=e.valueFormat,m=e.projectionType,j=e.projectionScale,y=e.projectionTranslation,R=e.projectionRotation,q=e.colors,T=e.domain,M=e.unknownColor,k=e.borderWidth,W=e.borderColor,x=e.enableGraticule,w=e.graticuleLineWidth,F=e.graticuleLineColor,E=e.layers,S=e.legends,O=e.isInteractive,L=e.onClick,P=e.onMouseMove,G=e.tooltip,B=t.useRef(null),D=o.useTheme(),I=o.useDimensions(i,n,a),N=I.margin,z=I.outerWidth,A=I.outerHeight,K=C({width:i,height:n,projectionType:m,projectionScale:j,projectionTranslation:y,projectionRotation:R,fillColor:function(){},borderWidth:k,borderColor:W}),Q=K.projection,V=K.graticule,_=K.path,J=K.getBorderWidth,U=K.getBorderColor,X=b({features:l,data:s,match:f,label:p,value:h,valueFormat:g,colors:q,unknownColor:M,domain:T}),Y=X.getFillColor,Z=X.boundFeatures,$=X.legendData;t.useEffect((function(){if(B){B.current.width=z*u,B.current.height=A*u;var e=B.current.getContext("2d");e.scale(u,u),e.fillStyle=D.background,e.fillRect(0,0,z,A),e.translate(N.left,N.top),_.context(e),E.forEach((function(t){"graticule"===t?!0===x&&(e.lineWidth=w,e.strokeStyle=F,e.beginPath(),_(V()),e.stroke()):"features"===t?Z.forEach((function(t){e.beginPath(),_(t),e.fillStyle=Y(t),e.fill();var o=J(t);o>0&&(e.strokeStyle=U(t),e.lineWidth=o,e.stroke())})):"legends"===t&&S.forEach((function(t){d.renderLegendToCanvas(e,v({},t,{data:$,containerWidth:i,containerHeight:n,theme:D}))}))}))}}),[B,z,A,N,u,D,_,V,Y,J,U,Z,S,E]);var ee=r.useTooltip(),te=ee.showTooltipFromEvent,oe=ee.hideTooltip,re=t.useCallback((function(e){if(O&&G){var t=H(e,B.current,Z,Q);t?te(c.jsx(G,{feature:t}),e):oe(),P&&P(t||null,e)}}),[te,oe,O,G,B,Z,Q]),ie=t.useCallback((function(){return O&&oe()}),[O,oe]),ne=t.useCallback((function(e){if(O&&L){var t=H(e,B.current,Z,Q);t&&L(t,e)}}),[O,B,Z,Q,L]);return c.jsx("canvas",{ref:B,width:z*u,height:A*u,style:{width:z,height:A,cursor:O?"auto":"normal"},onMouseMove:re,onMouseLeave:ie,onClick:ne})}));A.displayName="ChoroplethCanvas",A.propTypes=k,A.defaultProps=S;var K=o.withContainer(A);e.Choropleth=z,e.ChoroplethCanvas=K,e.ChoroplethCanvasDefaultProps=S,e.ChoroplethCanvasPropTypes=k,e.ChoroplethDefaultProps=E,e.ChoroplethPropTypes=M,e.GeoMap=G,e.GeoMapCanvas=I,e.GeoMapCanvasDefaultProps=w,e.GeoMapCanvasPropTypes=q,e.GeoMapDefaultProps=x,e.GeoMapPropTypes=R,e.ResponsiveChoropleth=function(e){return c.jsx(o.ResponsiveWrapper,{children:function(t){var o=t.width,r=t.height;return c.jsx(z,v({width:o,height:r},e))}})},e.ResponsiveChoroplethCanvas=function(e){return c.jsx(o.ResponsiveWrapper,{children:function(t){var o=t.width,r=t.height;return c.jsx(K,v({width:o,height:r},e))}})},e.ResponsiveGeoMap=function(e){return c.jsx(o.ResponsiveWrapper,{children:function(t){var o=t.width,r=t.height;return c.jsx(G,v({width:o,height:r},e))}})},e.ResponsiveGeoMapCanvas=function(e){return c.jsx(o.ResponsiveWrapper,{children:function(t){var o=t.width,r=t.height;return c.jsx(I,v({width:o,height:r},e))}})},e.projectionById=m,e.useChoropleth=b,e.useGeoMap=C,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=nivo-geo.umd.js.map
